package com.rhs.backend.web.error;

import com.rhs.backend.dto.ApiResponse;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.*;

import java.util.NoSuchElementException;

@RestControllerAdvice
public class GlobalExceptionHandler {

  @ExceptionHandler(IllegalArgumentException.class)
  @ResponseStatus(HttpStatus.BAD_REQUEST)
  public ApiResponse<?> illegalArg(IllegalArgumentException ex){
    return ApiResponse.fail(ex.getMessage());
  }

  @ExceptionHandler(NoSuchElementException.class)
  @ResponseStatus(HttpStatus.NOT_FOUND)
  public ApiResponse<?> notFound(NoSuchElementException ex){
    return ApiResponse.fail(ex.getMessage());
  }

  @ExceptionHandler(MethodArgumentNotValidException.class)
  @ResponseStatus(HttpStatus.BAD_REQUEST)
  public ApiResponse<?> invalid(MethodArgumentNotValidException ex){
    var msg = ex.getBindingResult().getFieldErrors().stream()
      .findFirst().map(e -> e.getField() + " " + e.getDefaultMessage()).orElse("Validation error");
    return ApiResponse.fail(msg);
  }

  @ExceptionHandler(Exception.class)
  @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
  public ApiResponse<?> general(Exception ex){
    return ApiResponse.fail("Server error: " + ex.getMessage());
  }
}
